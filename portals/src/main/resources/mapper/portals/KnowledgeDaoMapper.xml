<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ptl_knowledge">
	<insert id="insert" parameterType="com.hexin.pettyLoan.portals.model.KnowledgeItem">
		<selectKey keyProperty="id" resultType="java.lang.Integer" order="BEFORE">
			select nextval('seq_ptl_knowledge')
		</selectKey>
		insert into ptl_knowledge(id,title,type,keywords,content,file,isall,ctime,mtime,rtime,creater) 
		values(
		#{id,jdbcType=INTEGER},
		#{title,jdbcType=VARCHAR},
		#{type,jdbcType=VARCHAR},
		#{keywords,jdbcType=VARCHAR},
		#{content,jdbcType=VARCHAR},
		#{file,jdbcType=INTEGER},
		#{isall,jdbcType=INTEGER},
		now(),
		now(),
		now(),
		#{creater,jdbcType=INTEGER}
		)
	</insert>
	<update id="update" parameterType="com.hexin.pettyLoan.portals.model.KnowledgeItem">
		update ptl_knowledge
		<set>
			title=#{title},
			type=#{type},
			keywords=#{keywords},
			content=#{content},
			file=#{file},
			isall=#{isall},
			mtime=now()
		</set>
		where id = #{id}
	</update>
	<update id="updateByApprove" parameterType="com.hexin.pettyLoan.portals.model.KnowledgeItem">
		update ptl_knowledge
		<set>
			mtime=now(),
			status=#{status}
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete" parameterType="com.hexin.pettyLoan.portals.model.KnowledgeItem">
		update ptl_knowledge set isvalid=0, mtime=now() where id=#{id}
	</delete>
	
	<select id="getone" resultType="com.hexin.pettyLoan.portals.model.KnowledgeItem" parameterType="com.hexin.pettyLoan.portals.model.KnowledgeItem">
		select 
			id,title,type,keywords,content,file,isall,ctime,mtime,rtime,creater,isvalid,status,approveuserid
 		from ptl_knowledge 
 		<where>
			isvalid = 1
			AND id = #{id} 
		</where>
	</select>
	
	<select id="query" parameterType="com.hexin.pettyLoan.portals.model.KnowledgeItem" resultType="com.hexin.pettyLoan.portals.model.KnowledgeItem">
		select 
			id,title,type,keywords,content,file,isall,ctime,mtime,rtime,creater,isvalid,status,approveuserid
 		from ptl_knowledge 
		<where>
			isvalid = 1
				<if test="id != null and id != 0 ">
					<![CDATA[
						AND id = #{id} 
					]]>
				</if>
				<if test="title != null and title != '' ">
					<![CDATA[
						AND title like concat('%',#{title},'%')
					]]>
				</if>
				<if test="keywords != null and keywords != '' ">
					<![CDATA[
						AND keywords like concat('%',#{keywords},'%')
					]]>
				</if>
				<if test="content != null and content != '' ">
					<![CDATA[
						AND content like concat('%',#{content},'%')
					]]>
				</if>
		</where>
	</select>
	<select id="count" parameterType="com.hexin.pettyLoan.portals.model.KnowledgeItem" resultType="int" >
		select count(*) from ptl_knowledge
		<where>
			isvalid = 1
				<if test="id != null and id != 0 ">
					<![CDATA[
						AND id = #{id} 
					]]>
				</if>
				<if test="title != null and title != '' ">
					<![CDATA[
						AND title like concat('%',#{title},'%')
					]]>
				</if>
				<if test="keywords != null and keywords != '' ">
					<![CDATA[
						AND keywords like concat('%',#{keywords},'%')
					]]>
				</if>
				<if test="content != null and content != '' ">
					<![CDATA[
						AND content like concat('%',#{content},'%')
					]]>
				</if>
		</where>
	</select>
	<select id="page" parameterType="com.hexin.pettyLoan.portals.model.KnowledgeItem" resultType="com.hexin.pettyLoan.portals.model.KnowledgeItem">
		select 
			k.id,k.title,f.valuedescription AS type,k.keywords,k.content,k.file,k.isall,k.ctime,k.mtime,k.rtime,k.creater,k.isvalid,k.status,k.approveuserid
 		from ptl_knowledge AS k INNER JOIN sys_flexkey AS f ON f.flexkey = 'knowledgeType' AND f.flexvalue = k.type
		<where>
			k.isvalid = 1
				<if test="id != null and id != 0 ">
					<![CDATA[
						AND k.id = #{id} 
					]]>
				</if>
				<if test="title != null and title != '' ">
					<![CDATA[
						AND k.title like concat('%',#{title},'%')
					]]>
				</if>
				<if test="keywords != null and keywords != '' ">
					<![CDATA[
						AND k.keywords like concat('%',#{keywords},'%')
					]]>
				</if>
				<if test="content != null and content != '' ">
					<![CDATA[
						AND k.content like concat('%',#{content},'%')
					]]>
				</if>
		</where>
		order by k.status,k.id desc
		limit #{rows} offset #{start}
	</select>
	<select id="pageByApprove" parameterType="com.hexin.pettyLoan.portals.model.KnowledgeItem" resultType="com.hexin.pettyLoan.portals.model.KnowledgeItem">
		select 
			k.id,k.title,f.valuedescription AS type,k.keywords,k.content,k.file,k.isall,k.ctime,k.mtime,k.rtime,k.creater,k.isvalid,k.status,k.approveuserid
 		from ptl_knowledge AS k INNER JOIN sys_flexkey AS f ON f.flexkey = 'knowledgeType' AND f.flexvalue = k.type
		<where>
			k.isvalid = 1
			AND k.status != 0
				<if test="id != null and id != 0 ">
					<![CDATA[
						AND k.id = #{id} 
					]]>
				</if>
				<if test="title != null and title != '' ">
					<![CDATA[
						AND k.title like concat('%',#{title},'%')
					]]>
				</if>
				<if test="keywords != null and keywords != '' ">
					<![CDATA[
						AND k.keywords like concat('%',#{keywords},'%')
					]]>
				</if>
				<if test="content != null and content != '' ">
					<![CDATA[
						AND k.content like concat('%',#{content},'%')
					]]>
				</if>
		</where>
		order by CASE WHEN status=2 THEN -1 ELSE status END,k.id desc
		limit #{rows} offset #{start}
	</select>
	<select id="countByApprove" parameterType="com.hexin.pettyLoan.portals.model.KnowledgeItem" resultType="int" >
		select count(*) from ptl_knowledge
		<where>
			isvalid = 1
			AND status != 0
				<if test="id != null and id != 0 ">
					<![CDATA[
						AND id = #{id} 
					]]>
				</if>
				<if test="title != null and title != '' ">
					<![CDATA[
						AND title like concat('%',#{title},'%')
					]]>
				</if>
				<if test="keywords != null and keywords != '' ">
					<![CDATA[
						AND keywords like concat('%',#{keywords},'%')
					]]>
				</if>
				<if test="content != null and content != '' ">
					<![CDATA[
						AND content like concat('%',#{content},'%')
					]]>
				</if>
		</where>
	</select>
</mapper>